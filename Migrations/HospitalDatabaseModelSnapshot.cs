// <auto-generated />
using System;
using HospitalManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalManagement.Migrations
{
    [DbContext(typeof(HospitalDatabase))]
    partial class HospitalDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalManagement.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Advance")
                        .HasColumnType("int");

                    b.Property<string>("Bill_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doctor_charge")
                        .HasColumnType("int");

                    b.Property<string>("Health_card")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InpatientId")
                        .HasColumnType("int");

                    b.Property<int>("Lab_charge")
                        .HasColumnType("int");

                    b.Property<int>("Medicine_charge")
                        .HasColumnType("int");

                    b.Property<int>("No_of_days")
                        .HasColumnType("int");

                    b.Property<int>("Nursing_charge")
                        .HasColumnType("int");

                    b.Property<int>("Oprtn_charge")
                        .HasColumnType("int");

                    b.Property<int?>("OutpatientId")
                        .HasColumnType("int");

                    b.Property<string>("Patient_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Patientid")
                        .HasColumnType("int");

                    b.Property<string>("Pid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Room_charge")
                        .HasColumnType("int");

                    b.Property<int>("Totalbill")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InpatientId");

                    b.HasIndex("OutpatientId");

                    b.HasIndex("Patientid");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("HospitalManagement.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctorname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LabId")
                        .HasColumnType("int");

                    b.Property<int?>("Patientid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabId");

                    b.HasIndex("Patientid");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HospitalManagement.Models.Inpatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Advance")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_of_adm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_of_dis")
                        .HasColumnType("datetime2");

                    b.Property<string>("Labno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inpatients");
                });

            modelBuilder.Entity("HospitalManagement.Models.Lab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doctorid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InpatientId")
                        .HasColumnType("int");

                    b.Property<string>("Labno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutpatientId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId1")
                        .HasColumnType("int");

                    b.Property<string>("Patient_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InpatientId");

                    b.HasIndex("OutpatientId");

                    b.ToTable("Labs");
                });

            modelBuilder.Entity("HospitalManagement.Models.Outpatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Outpatients");
                });

            modelBuilder.Entity("HospitalManagement.Models.Patient", b =>
                {
                    b.Property<int>("Patientid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Disease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InpatientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutpatientId")
                        .HasColumnType("int");

                    b.Property<int>("Phoneno")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Patientid");

                    b.HasIndex("InpatientId");

                    b.HasIndex("OutpatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalManagement.Models.Bill", b =>
                {
                    b.HasOne("HospitalManagement.Models.Inpatient", "Inpatient")
                        .WithMany()
                        .HasForeignKey("InpatientId");

                    b.HasOne("HospitalManagement.Models.Outpatient", "Outpatient")
                        .WithMany()
                        .HasForeignKey("OutpatientId");

                    b.HasOne("HospitalManagement.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("Patientid");
                });

            modelBuilder.Entity("HospitalManagement.Models.Doctor", b =>
                {
                    b.HasOne("HospitalManagement.Models.Lab", "Lab")
                        .WithMany("Doctors")
                        .HasForeignKey("LabId");

                    b.HasOne("HospitalManagement.Models.Patient", "Patient")
                        .WithMany("Doctors")
                        .HasForeignKey("Patientid");
                });

            modelBuilder.Entity("HospitalManagement.Models.Lab", b =>
                {
                    b.HasOne("HospitalManagement.Models.Inpatient", "Inpatient")
                        .WithMany("Labs")
                        .HasForeignKey("InpatientId");

                    b.HasOne("HospitalManagement.Models.Outpatient", "Outpatient")
                        .WithMany("Labs")
                        .HasForeignKey("OutpatientId");
                });

            modelBuilder.Entity("HospitalManagement.Models.Patient", b =>
                {
                    b.HasOne("HospitalManagement.Models.Inpatient", "Inpatient")
                        .WithMany()
                        .HasForeignKey("InpatientId");

                    b.HasOne("HospitalManagement.Models.Outpatient", "Outpatient")
                        .WithMany()
                        .HasForeignKey("OutpatientId");
                });
#pragma warning restore 612, 618
        }
    }
}
